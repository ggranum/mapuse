@import '~@angular/material/theming';
@import '~@covalent/core/theming/all-theme';
// Plus imports for other components in your app.

// Can override both foreground and background below if required

// $mat-light-theme-background: (
//   status-bar: map_get($mat-grey, 300),
//   app-bar:    map_get($mat-grey, 100),
//   background: map_get($mat-grey, 50),
//   hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX
//   card:       white,
//   dialog:     white,
//   disabled-button: rgba(black, 0.12),
//   raised-button: white,
// );

// $mat-light-theme-foreground: (
//   base:            black,
//   divider:         rgba(black, 0.12),
//   dividers:        rgba(black, 0.12),
//   disabled:        rgba(black, 0.38),
//   disabled-button: rgba(black, 0.38),
//   disabled-text:   rgba(black, 0.38),
//   hint-text:       rgba(black, 0.38),
//   secondary-text:  rgba(black, 0.54),
//   icon:            rgba(black, 0.54),
//   icons:           rgba(black, 0.54),
//   text:            rgba(black, 0.87)
// );

// Include the base styles for Angular Material core. We include this here so that you only
// have to load a single css file for Angular Material in your app.
@include mat-core();

// Creates a container object for a light theme to be given to individual component theme mixins.
// This function is from the _theming.scss file in @angular/material. It's been modified to allow
// overriding of the background and foreground objects.
@function dm-light-theme($primary, $accent, $warn, $foreground, $background) {
  @return (
    primary: $primary,
    accent: $accent,
    warn: $warn,
    is-dark: false,
    foreground: $foreground,
    background: $background,
  );
}


// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue.
$os-primary: mat-palette($mat-blue);
$os-accent:  mat-palette($mat-amber);
$os-warn:    mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$os-theme: mat-light-theme($os-primary, $os-accent, $os-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($os-theme);
@include covalent-theme($os-theme);

.geology-theme {
  // TODO this is probably the wrong way to customise background
  $geology-background: (
    status-bar: map_get($mat-grey, 300),
    app-bar:    map_get($mat-grey, 100),
    background: map_get($mat-brown, 100),
    hover:      rgba(black, 0.04),
    card:       white,
    dialog:     yellow,
    disabled-button: rgba(black, 0.12),
    raised-button: white,
    focused-button: $black-6-opacity,
    selected-button: map_get($mat-grey, 300),
    selected-disabled-button: map_get($mat-grey, 400),
    disabled-button-toggle: map_get($mat-grey, 200),
  );

  $geology-foreground: (
    base:            black,
    divider:         rgba(black, 0.12),
    dividers:        rgba(black, 0.12),
    disabled:        rgba(black, 0.38),
    disabled-button: rgba(black, 0.38),
    disabled-text:   rgba(black, 0.38),
    hint-text:       rgba(black, 0.38),
    secondary-text:  rgba(black, 0.54),
    icon:            rgba(black, 0.54),
    icons:           rgba(black, 0.54),
    text:            rgba(black, 0.87),
    slider-off:        rgba(black, 0.26),
    slider-off-active: rgba(black, 0.38),
  );

  $geology-primary: mat-palette($mat-brown);
  $geology-accent:  mat-palette($mat-amber);
  $geology-warn:    mat-palette($mat-red);

  $geology-theme: dm-light-theme($geology-primary, $geology-accent, $geology-warn, $geology-foreground, $geology-background);

  @include angular-material-theme($geology-theme);
  @include covalent-theme($geology-theme);
}

